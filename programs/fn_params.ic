main := void -> void {
  a: [--; int] = [0, 1, 2, 3, 4, 5, 6]

  print map((n: int) -> int {
    return n * n
  }, a)

  print '\n'
  print three
  print '\n'
  print three()
  print '\n'
  print three()()
  print '\n'
}

map := (f: int -> int, data: [--; int]) -> [--; int] {
  ret := data
  for i in 0u .. data.size {
    ret[i] = f(data[i])
  }

  return ret
}

three := void -> (void -> int) {
  return void -> int {
    return 3
  }
}
