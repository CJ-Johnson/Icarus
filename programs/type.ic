point2d := type {
  x: real
  y: real
}

point3d := type {
  x : real
  y : real
  z : real
}

show2d := (pt : point2d) -> void {
  print '('
  print pt.x
  print ','
  print ' '
  print pt.y
  print ')'
}

show3d := (pt : point3d) -> void {
  print '('
  print pt.x
  print ','
  print ' '
  print pt.y
  print ','
  print ' '
  print pt.z
  print ')'
}

square_dist := (pt1: point3d, pt2: point3d) -> real {
  dx := pt1.x - pt2.x
  dy := pt1.y - pt2.y
  dz := pt1.y - pt2.z
  return dx * dx + dy * dy + dz * dz
}

main := void -> void {
  p1 : point3d
  p2 : point3d
  q : point2d
  
  p1.x = 1.0
  p1.y = 1.0
  p1.z = 1.0
  
  p2.x = 4.0
  p2.y = 5.0
  p2.z = 13.0
  
  show2d(q)
  print ' '
  show3d(p1)
  print ' '
  show3d(p2)
  print '\n'
  print square_dist(p1, p2)
  print '\n'
  
  circle := type {
    radius : real
    center : point2d
  }
  
  c : circle
  c.radius = 3.0
  c.center.x = 1.1
  c.center.y = 1.2
  
  print c.radius
  print '\n'
  print c.center.x
  print ','
  print ' '
  print c.center.y
  print '\n'
  print area(c)
  print '\n'

  area := (ci: circle) -> real {
    return 3.14159 * ci.radius * ci.radius
  }
}

