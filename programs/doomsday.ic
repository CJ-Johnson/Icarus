anchor := (year: int) -> int {
  anchor_cycle := [2, 0, 5, 3]
  century := year / 100
  return anchor_cycle[century % 4]
}

drift := (year: int) -> int {
  yy := year % 100
  return yy / 12 + yy % 12 + yy % 12 / 4
}

leap_year := (year: int) -> bool {
  return case {
    year % 400 == 0  =>  true
    year % 100 == 0  =>  false
    year % 4   == 0  =>  true
    else             =>  false
  }
}

main := void -> void {
  day_of_week := ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"]

  // leap year issue fixed for jan and feb.
  doomsday_in_month := [0, 3, 28, 0, 4, 9, 6, 11, 8, 5, 10, 7, 12]

  print "day = "
  day: int
  day.input()

  print "month = "
  month: int
  month.input()

  print "year = "
  year: int
  year.input()

  doomsday := (anchor(year) + drift(year)) % 7

  day_of_week_num := (day - doomsday_in_month[month] + 28) + doomsday
  if leap_year(year) {
    day_of_week_num += 1
  }

  print "doomsday that year was ", day_of_week[doomsday], "\n"
  print "day of week = ", day_of_week[ day_of_week_num % 7 ], "\n"
}

Basic := (T: type) -> bool {
  return  T == int | T == uint | T == char | T == real
}
 
input := (ptr: &Basic`T) -> void {
  scanf: (&char, &char) -> int #cstdlib
  if T == int {
    cstr := ['%', 'd', ascii(0u)]
    scanf(&(cstr[0]), ptr :> &char)

  } else if T == uint {
    cstr := ['%', 'u', ascii(0u)]
    scanf(&cstr[0], ptr :> &char)

  } else if T == char {
    cstr := ['%', 'c', ascii(0u)]
    scanf(&cstr[0], ptr :> &char)

  } else if T == real {
    cstr := ['%', 'l', 'f', ascii(0u)]
    scanf(&cstr[0], ptr :> &char)
  }
}



