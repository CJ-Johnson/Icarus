FILE := struct {}

File     := struct { _handle: &FILE }
FileMode := enum { Read \\ Write }

open := (name: &string, m: FileMode) -> &FILE {
  fopen: (string, string) -> &FILE #cstdlib

  return fopen(@name, case {
    m == FileMode.Read  => "r"
    else                => "w"
  })
}

Next := (this: &File) -> char {
  fgetc: &FILE -> uint #cstdlib
  EOF := 4294967295u

  n := this._handle.fgetc()

  return ascii(case {
    n == EOF  =>  0u
    else      =>  n
  })
}

main := void -> void { 
  name := "programs/cheating_quine.ic"

  f: File
  f._handle = name.open(FileMode.Read)

  c := f.Next()
  while c != ascii(0u) {
    print c
    c = f.Next()
  }
}
