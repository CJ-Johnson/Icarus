Any := (T: type) -> bool {
  n: int = 49374
  x: real
  c := 'A'
  bar()
  return true
}

Small := (T: type) -> type {
  return case {
    T.bytes < (&T).bytes  =>  T
    else                  =>  &T
  }
}

bar := void -> void {
  c := 'B'
  a: [5; int]
}

foo := (val: Any`T) -> void {
  print val
}

main := void -> void {
  // foo(3)
  print Small(int), '\n'
  print Small(uint), '\n'
  print Small(char), '\n'
  print Small(real), '\n'
}
