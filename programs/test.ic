Any := (T: type) -> bool { return true }

Small := (T: type) -> bool {
  print suit.diamonds
  print T, '.', 'b', 'y', 't', 'e', 's', ' ', '=', ' ', T.bytes, '\n'
  print T, '.', 'a', 'l', 'i', 'g', 'n', 'm', 'e', 'n', 't', ' ', '=', ' ', T.alignment, '\n', '\n'
  return T.bytes <= 4u | T.alignment > 4u
}

foo := (val: Small`T) -> void {
  print val
}

main := void -> void {
  foo(3)
  foo(3.0)
  foo('x')
}

suit := enum {
  clubs
  diamonds
  hearts
  spades
}
