unique_ptr := struct {
  ptr: &int
}

Get := void -> unique_ptr {
  ptr: unique_ptr
  ptr.ptr = alloc(int)
  print "calling Get               = ", ptr.ptr, "\n"
  return ptr
}

__destroy__ := (uptr: &unique_ptr) -> void {
  print "Calling global destructor = ", uptr.ptr, "\n"
  free uptr.ptr
}

// __print__ := (uptr: unique_ptr) -> void {
//   print @uptr.ptr
// }

main := void -> void {
print "alloc = ", alloc(int), "\n"
print "alloc = ", alloc(int), "\n"
print "alloc = ", alloc(int), "\n"


  p := Get()

  __destroy__ := (uptr: &unique_ptr) -> void {
    return
  }

print "--------\n"
  foo()
print "--------\n"
}
foo := void -> void {
  p := Get()
  q := Get()
}
