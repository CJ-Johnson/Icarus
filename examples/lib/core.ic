if ::= scope {
  self ::= block {
    before ::= (b: bool) => switch {
      self when b
      else when !b
    }
    after ::= () => exit
  }
  else ::= block {
    before ::= () => else
    after ::= () => exit
  } 
}

forever ::= scope {
  self ::= block {
    before ::= () => self
    after ::= () => self
  }
}

while ::= scope {
  self ::= block {
    before ::= (b: bool) => switch {
      self when b
      exit when !b
    }
    after ::= () => self
  }
}
