if ::= scope {
  init ::= (b: bool) => switch {
    then        when b
    else | exit when !b
  }
  then ::= block {
    before ::= () -> {}
    after ::= () => exit
  }
  else ::= block? {
    before ::= () -> {}
    after ::= () => exit
  }
  done ::=() -> {}
}

while ::= scope {
  init ::= (b: bool) => switch {
    do when b
    exit when !b
  }
  do ::= block {
    before ::= () -> {}
    after ::= () => start
  }
  done ::= () -> {}
}
