ERROR_MACRO(InvalidRequirement, "Require statements must take a string literal "
                                "as the name of the file to be imported.",
            "", 1)
ERROR_MACRO(CallingDeclaration,
            "Invalid declaration. You cannot call a declaration.", "", 1)
ERROR_MACRO(NonDeclInStructDecl,
            "Each struct member must be defined using a declaration.", "", 1)
ERROR_MACRO(RepeatedEnumName, "Repeated enum member.", "", 1)
ERROR_MACRO(NotInMultilineComment, "I found a token representing the end of a "
                                   "multi-line comment (*/), but it was not "
                                   "part of a comment block.",
            "", 2)
ERROR_MACRO(EnumNeedsIds, "Enum members must be identifiers.", "", 1)
ERROR_MACRO(NonKVInCase,
            "Each line in case statement must be a key-value pair.", "", 1)
ERROR_MACRO(NonInDeclInForLoop, "Expect 'in' declaration in for-loop.", "", 1)
ERROR_MACRO(InvalidDecl, "Invalid use of declaration.", "", 1)
ERROR_MACRO(DeclNotAllowed, "Declaration is not allowed here", "", 1)
ERROR_MACRO(RHSNonIdInAccess, "Right-hand side must be an identifier", "", 1)
ERROR_MACRO(NonIdJumpOperand,
            "Operand to a jump instruction must be an identifier.", "", 1)
ERROR_MACRO(NonComposableFunctions, "Functions cannot be composed.", "", 1)
ERROR_MACRO(NonTypeFunctionInput, "From-type for a function must be a type.",
            "", 1)
ERROR_MACRO(NonTypeFunctionOutput, "To-type for a function must be a type.", "",
            1)
ERROR_MACRO(TypeIteration, "Cannot iterate over a type", "", 1)
ERROR_MACRO(IndeterminantType, "Cannot determine type from in declaration.", "",
            1)
ERROR_MACRO(VoidDeclaration, "Identifier being declared as having void type.",
            "", 1)
ERROR_MACRO(XorEqNeedsBool, "Operator '^=' must take arguments of type bool.",
            "", 1)
ERROR_MACRO(AndEqNeedsBool, "Operator '&=' must take arguments of type bool.",
            "", 1)
ERROR_MACRO(OrEqNeedsBool, "Operator '|=' must take arguments of type bool.",
            "", 1)
ERROR_MACRO(ArrayIndexType, "Array length indexed by non-integral type", "", 1)
ERROR_MACRO(InconsistentArrayType,
            "Type error: Array literal must have consistent type", "", 1)
ERROR_MACRO(JumpOutsideLoop, "statement must be contained inside a loop.", "",
            1)
